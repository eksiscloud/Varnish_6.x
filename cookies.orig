	#### For Varnish under 6.4 or without libvmod-cookie
	
	## Cookies
	
	# First remove the Google Analytics added parameters, useless for backend
	# This should do quite early, not here.
	if (req.url ~ "(\?|&)(utm_source|utm_medium|utm_campaign|utm_content|gclid|cx|ie|cof|siteurl)=") {
		set req.url = regsuball(req.url, "&(utm_source|utm_medium|utm_campaign|utm_content|gclid|cx|ie|cof|siteurl)=([A-z0-9_\-\.%25]+)", "");
		set req.url = regsuball(req.url, "\?(utm_source|utm_medium|utm_campaign|utm_content|gclid|cx|ie|cof|siteurl)=([A-z0-9_\-\.%25]+)", "?");
		set req.url = regsub(req.url, "\?&", "?");
		set req.url = regsub(req.url, "\?$", "");
	}

	# Remove any Google Analytics and Adsense based Cookies
	set req.http.Cookie = regsuball(req.http.Cookie, "__utm.=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "_ga.=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "_gat=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "_gali=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "_gid=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "utmctr=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "utmcmd.=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "utmccn.=[^;]+(; )?", "");

	# Remove Caos, locally stored GA
	set req.http.Cookie = regsuball(req.http.Cookie, "caosLocalGA=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "caosLocalGA_gid=[^;]+(; )?", "");

	# Wordpress
	set req.http.Cookie = regsuball(req.http.Cookie, "wp-settings-=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "wp-settings-time-=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "wordpress_test_Cookie=[^;]+(; )?", "");
	
	# Remove the PHPSESSID
	#set req.http.Cookie = regsuball(req.http.Cookie, "PHPSESSID=[^;]+(; )?", "");

	# Remove the Quant Capital Cookies (added by some plugin, all __qca)
	set req.http.Cookie = regsuball(req.http.Cookie, "__qc.=[^;]+(; )?", "");

	# Remove DoubleClick offensive Cookies
	set req.http.Cookie = regsuball(req.http.Cookie, "__gads=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "gadsTEST=[^;]+(; )?", "");

	# Others
	set req.http.Cookie = regsuball(req.http.Cookie, "__distillery=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "mp_=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "basepress=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "_pk_=[^;]+(; )?", "");
	set req.http.Cookie = regsuball(req.http.Cookie, "has_js=[^;]+(; )?", "");

	# Gitea - I've not tested if this should drop too
	#set req.http.Cookie = regsuball(req.http.Cookie, "i_like_gitea=[^;]+(; )?", "");

	# Remove the AddThis Cookies
	set req.http.Cookie = regsuball(req.http.Cookie, "__atuv.=[^;]+(; )?", "");
	
	# Remove a ";" prefix in the cookie if present
	set req.http.Cookie = regsuball(req.http.Cookie, "^;\s*", "");

	# Are there Cookies left with only spaces or that are empty?
	if (req.http.Cookie ~ "^ *$") {
		unset req.http.Cookie;
	}
	
	## This actually do the magic? With statemant at vcl_hash it should let backend decide if a cookie means caching or not.
	## But will backends really do that? That's the question.
	# Save the cookies if any left, like wp_session, lang etc..., before the built-in vcl_recv
	# Those can be restored without cacheing at vcl_hash
	set req.http.Cookie-Backup = req.http.Cookie;
	unset req.http.Cookie;
	
	# So:
	# sub vcl_hash {
	#	if (req.http.Cookie-Backup) {
		# restore the cookies before the lookup if any
	#	set req.http.Cookie = req.http.Cookie-Backup;
	#	unset req.http.Cookie-Backup;
	#	}
	# }
	